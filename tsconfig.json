{
  "compilerOptions": {
    "target": "ES6",
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */

    "module": "commonjs",
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */

    "pretty": true,
    /* Stylize errors and messages using color and context (experimental). */

    "sourceMap": true,
    /* Generates corresponding '.map' file. */

    "outDir": "dist",
    /* Redirect output structure to the directory. */

    "importHelpers": true,
    /* Import emit helpers from 'tslib'. */

    "noImplicitAny": false,
    /* Raise error on expressions and declarations with an implied 'any' type. */

    "strictNullChecks": false,
    /* Enable strict null checks. */

    "esModuleInterop": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    "forceConsistentCasingInFileNames": true,
    /* Ensure that casing is correct in imports. */

    "strict": true,
    /* Enable all strict type-checking options. */

    "alwaysStrict": true,
    /* Parse in strict mode and emit "use strict" for each source file. */

    "noUnusedLocals": true,
    /* Report errors on unused locals. */

    "noUnusedParameters": false,
    /* Report errors on unused parameters. */

    "noImplicitReturns": true,
    /* Report error when not all code paths in function return a value. */

    "noFallthroughCasesInSwitch": true,
    /* Report errors for fallthrough cases in switch statement. */

    "moduleResolution": "node",
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */

    "baseUrl": ".",
    /* Base directory to resolve non-absolute module names. */

    "allowSyntheticDefaultImports": true,
    /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */

    "experimentalDecorators": true,
    /* Enables experimental support for ES7 decorators. */

    "emitDecoratorMetadata": true,
    /* Enables experimental support for emitting type metadata for decorators. */

    "resolveJsonModule": true,
    /* Include modules imported with '.json' extension */

    "lib": [
      "es5",
      "es6",
      "dom",
      "es2015.core",
      "es2015.collection",
      "es2015.generator",
      "es2015.iterable",
      "es2015.promise",
      "es2015.proxy",
      "es2015.reflect",
      "es2015.symbol",
      "es2015.symbol.wellknown",
      "esnext.asynciterable"
    ],
    /* Specify library files to be included in the compilation. */

    "skipLibCheck": true
    /* Skip type checking all .d.ts files. */
  }
}